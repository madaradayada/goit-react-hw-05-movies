{"version":3,"file":"static/js/544.7863bd76.chunk.js","mappings":"iRAMe,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBF,GAAW,GACXF,EAAS,MAHO,UAIKK,EAAAA,EAAAA,MAJL,OAIVC,EAJU,OAKhBR,EAAUQ,EAAOC,SALD,gDAOhBP,EAAS,KAAEQ,UAPK,yBAShBN,GAAW,GATK,4EAAH,qDAYjBE,GACD,GAAE,IAEEP,GAKH,4BACGI,IAAW,SAAC,IAAD,IACXF,IAAS,SAAC,IAAD,CAAQU,IAAKV,KACvB,oDACA,SAAC,IAAD,CAAWF,OAAQA,OARd,IAWV,C,sLCnCKa,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHT,EAAiB,mCAAG,sGACRK,EAASK,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLR,EAASK,IAAI,gBAAiB,CACnDF,OAAQ,CACNK,MAAOA,KAHiB,uBACpBF,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdG,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASK,IAAT,iBAAuBK,IADpB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAe,mCAAG,WAAMD,GAAN,yFACNV,EAASK,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,EAAKM,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,yFACNV,EAASK,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,EAAKT,SAFiB,2CAAH,qD,2GCjCfiB,EAAaC,EAAAA,GAAAA,GAAH,yHAQVC,EAAYD,EAAAA,GAAAA,GAAH,mY,SCNTE,EAAY,SAAC,GAAgB,IAAd9B,EAAa,EAAbA,OACpB+B,GAAWC,EAAAA,EAAAA,MACXC,EAAWjC,EAAOkC,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OAC1B,SAACP,EAAD,WACE,UAAC,KAAD,CAAMQ,GAAE,kBAAad,GAAMe,MAAO,CAAEC,KAAMR,GAA1C,WACE,gBACES,IACEJ,EAAW,0CAC4BA,GACnCK,EAENC,IAAKP,KAEP,uBAAIA,QAVQZ,EADU,IAgB5B,OAAO,SAACI,EAAD,UAAaM,GACrB,C,4FClBc,SAASU,EAAT,GAA0B,IAAR/B,EAAO,EAAPA,IAE/B,OADAgC,EAAAA,GAAAA,MAAYhC,EAAIiC,UACT,SAAC,KAAD,GACR,C","sources":["pages/Home/Home.jsx","services/Api.js","services/components/MovieList/MovieListStyled.js","services/components/MovieList/MovieList.jsx","services/components/Notify/Notify.jsx"],"sourcesContent":["import { getTrendingMovies } from 'services/Api';\nimport { useState, useEffect } from 'react';\nimport { MovieList } from 'services/components/MovieList/MovieList';\nimport Loader from 'services/components/Loader/Loader';\nimport Notify from 'services/components/Notify/Notify';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const result = await getTrendingMovies();\n        setMovies(result.results);\n      } catch (e) {\n        setError(e.toJSON());\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  if (!movies) {\n    return null;\n  }\n\n  return (\n    <main>\n      {loading && <Loader />}\n      {error && <Notify msg={error} />}\n      <h1>Best of the best today</h1>\n      <MovieList movies={movies} />\n    </main>\n  );\n}","import axios from 'axios';\n\nconst API_KEY = '0a2a13ada7f3d11a330c9c658554fd16';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};","import styled from 'styled-components';\n\nexport const MovieWrapp = styled.ul`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const MovieItem = styled.li`\n  position: relative;\n  border-radius: 5px;\n  list-style-type: none;\n  opacity: 1;\n\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    opacity: 0.9;\n    transform: scale(1.025);\n    }\n  & a {\n    text-decoration: none;\n    color: #032541;\n  }\n  & p {\n    font-weight: 600;\n  }\n  & img {\n    width: 300px;\n   \n  }\n`;","import { Link, useLocation } from 'react-router-dom';\nimport imgPlaceholder from 'images/img-placeholder.png';\nimport { MovieWrapp, MovieItem } from './MovieListStyled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const elements = movies.map(({ id, title, poster_path }) => (\n    <MovieItem key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : imgPlaceholder\n          }\n          alt={title}\n        />\n        <p>{title}</p>\n      </Link>\n    </MovieItem>\n  ));\n\n  return <MovieWrapp>{elements}</MovieWrapp>;\n};","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport React from 'react';\n\nexport default function Notify({ msg }) {\n  toast.error(msg.message);\n  return <ToastContainer />;\n}"],"names":["Home","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","fetchMovies","getTrendingMovies","result","results","toJSON","msg","instance","axios","baseURL","params","api_key","get","data","getSearchMovie","query","getMovieById","id","getMovieCredits","cast","getMovieReviews","MovieWrapp","styled","MovieItem","MovieList","location","useLocation","elements","map","title","poster_path","to","state","from","src","imgPlaceholder","alt","Notify","toast","message"],"sourceRoot":""}